version: "3.7"

##############
#
# Para configurar o chatwoot, execute o comando abaixo no console do container:
#
# bundle exec rails db:chatwoot_prepare
#
# Variáveis de Ambiente:
#
# https://www.chatwoot.com/docs/self-hosted/configuration/environment-variables
#
# Valores Padrão:
# https://github.com/chatwoot/chatwoot/blob/develop/.env.example
#
#############

# Definição dos Serviços
services:
  # Definição do Nome do Serviço da Interface Web
  chatwoot_admin:
    # imagem oficial do chatwoot
    # https://hub.docker.com/r/chatwoot/chatwoot/tags
    image: chatwoot/chatwoot:v3.10.2-ce
    # Define o hotname do container
    hostname: "{{.Service.Name}}.{{.Task.Slot}}"
    # comando padrão para subir o servidor web
    command: bundle exec rails s -p 3000 -b 0.0.0.0
    # entrypoint para configurar o aplicativo
    entrypoint: docker/entrypoints/rails.sh
    # configura os volumes do chatwoot
    volumes:
      - chatwoot_data:/app/storage # arquivos do usuário
    # configura a rede do serviço
    networks:
      # Define a nossa rede padrão do swarm
      - network_swarm_public
    # Configura as variáveis de ambiente do chatwoot
    environment:
      ##########################################
      # Nome do Setup
      ##########################################
      - INSTALLATION_NAME=chatwoot
      # Ambiente de Execução do Node
      - NODE_ENV=production
      # Ambiente de Execução do Rails
      - RAILS_ENV=production
      # Tipo de Instalação
      - INSTALLATION_ENV=docker
      # Chave de Segurança
      - SECRET_KEY_BASE=123458bb7ef6402f6a8bcf5d3be54321
      # URL do Frontend
      - FRONTEND_URL=https://chat.agenciasynca.com.br
      # Configura o idioma padrão
      - DEFAULT_LOCALE=en
      # Configura o SSL
      - FORCE_SSL=true
      # Configura a criação de novas contas
      - ENABLE_ACCOUNT_SIGNUP=false
      # Configura o Log
      - RAILS_LOG_TO_STDOUT=true
      # Configura o Avatar do Bot
      - USE_INBOX_AVATAR_FOR_BOT=true
      ##########################################
      # Configura o Redis
      ##########################################
      # Configura o Redis
      - REDIS_URL=redis://redis:6379
      # Se você habilitou a senha do redis
      # - REDIS_PASSWORD=
      ##########################################
      # Configura o Banco de Dados
      ##########################################
      # Configura o endereço do Postgres ou PgBouncer
      - POSTGRES_HOST=postgres
      # Configura o Usuário do Postgres
      - POSTGRES_USERNAME=postgres
      # Configura a Senha do Postgres
      - POSTGRES_PASSWORD=SENHA
      # Configura o Banco de Dados do Postgres
      - POSTGRES_DATABASE=chatwoot
      ##########################################
      # Configurações do Email
      # Endereço de Remetente
      - MAILER_SENDER_EMAIL=contato@promovaweb.com
      # Hostname do Provedor SMTP
      - SMTP_ADDRESS=smtp2http
      # Tipo de Autenticação
      - SMTP_AUTHENTICATION=plain
      # Domínio do SMTP
      - SMTP_DOMAIN=promovaweb.com
      # Habilita o uso de TLS no SMTP
      - SMTP_ENABLE_STARTTLS_AUTO=false
      # Configura a porta do SMTP
      - SMTP_PORT=25
      # Usuário do SMTP
      - SMTP_USERNAME=USER
      # Senha do SMTP
      - SMTP_PASSWORD=SENHA
      ##########################################
      # Configura o Minio
      ##########################################
      # Seleciona o Tipo de Storage
      - ACTIVE_STORAGE_SERVICE=s3_compatible
      # Nome do Bucket do Minio
      - STORAGE_BUCKET_NAME=chatwoot
      # Access Key do Minio
      - STORAGE_ACCESS_KEY_ID=ZwIJv7DO2bZoQV8hpe51
      # Secret Key do Minio
      - STORAGE_SECRET_ACCESS_KEY=l7YKI7ptN8BxqWCm1uKV
      # Região
      - STORAGE_REGION=nyc3
      # Endereço Público do Minio
      - STORAGE_ENDPOINT=https://s3.agenciasynca.com.br
      # Força a usar o caminho na URL (obrigatório pro minio)
      - STORAGE_FORCE_PATH_STYLE=true
    # Configura o Modo de Deploy da Aplicação
    deploy:
      # Configura o modo de deploy
      mode: replicated
      # Configura o numero de replicas
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          # - node.hostname == worker1
      resources:
        limits:
          # Define a quantidade de CPU para o CodeChat para evitar travamento do Host
          cpus: "1"
          # Define a quantidade de RAM para o CodeChat para evitar travamento do Host
          memory: 1024M
      labels:
        # Configura o Roteamento do Traefik
        - traefik.enable=true # habilita o traefik
        # Configura o Roteamento do Traefik para o Chatwoot
        - traefik.http.routers.chatwoot_admin.rule=Host(`chat.agenciasynca.com.br`)
        # Define o tipo de entrada para HTTPS
        - traefik.http.routers.chatwoot_admin.entrypoints=websecure
        # Define o certificado
        - traefik.http.routers.chatwoot_admin.tls.certresolver=letsencryptresolver
        # Define o serviço do Chatwoot
        - traefik.http.routers.chatwoot_admin.service=chatwoot_admin
        # Define a porta do Chatwoot
        - traefik.http.services.chatwoot_admin.loadbalancer.server.port=3000
        # Define os Headers do Chatwoot
        - traefik.http.services.chatwoot_admin.loadbalancer.passhostheader=true
        # Configura o Middleware do Traefik para trabalhar com SSL no Websockets
        - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
        - traefik.http.routers.chatwoot_admin.middlewares=sslheader@docker
volumes:
  chatwoot_data:
    external: true
    name: chatwoot_data
networks:
  network_swarm_public:
    external: true
    name: network_swarm_public
